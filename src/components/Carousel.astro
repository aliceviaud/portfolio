---
// Define props if needed
const { images } = Astro.props;
---

<div class="relative w-full overflow-hidden">
    {
        images.map((image: string, index: number) => (
            <div class={`carousel-item ${index === 0 ? "block" : "hidden"}`}>
                <img src={image} alt={`Slide ${index + 1}`} class="w-full object-cover object-start" />
            </div>
        ))
    }
    <button
        class="btn prev-button left-2"
    >
        <i data-lucide="chevron-left" class="size-7"></i>
    </button>
    <button
        class="btn next-button right-2"
    >
        <i data-lucide="chevron-right" class="size-7"></i>
    </button>
</div>

<script>
    import { createIcons, ChevronRight, ChevronLeft } from "lucide";

    createIcons({
        icons: {
            ChevronRight,
            ChevronLeft,
        },
    });

    let currentIndex = 0;
    const items = document.querySelectorAll(".carousel-item");
    const totalItems = items.length;

    document.querySelector(".prev-button")?.addEventListener("click", () => {
        console.log("prev button clicked");
        goToItem(currentIndex + 1);
    });

    document.querySelector(".next-button")?.addEventListener("click", () => {
        console.log("Next button clicked");
        goToItem(currentIndex - 1);
    });

    function goToItem(index: number) {
        items[currentIndex].classList.remove("block");
        items[currentIndex].classList.add("hidden");
        currentIndex = (index + totalItems) % totalItems;
        items[currentIndex].classList.add("block");
        items[currentIndex].classList.remove("hidden");
    }
</script>

<style>
    @reference "tailwindcss";
    .btn {
        @apply absolute top-1/2 transform -translate-y-1/2 bg-black/70 text-white p-2 size-12 rounded-full cursor-pointer items-center justify-center flex;
    }
</style>
